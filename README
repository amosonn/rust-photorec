= Rust photorec

Tools for handling `report.xml` generated by photorec, merging them and reconstructing photos from them. Also contains some general code which might be useful elsewhere. Contains three crates:

== assert_let

A macro for testing. Compares a tested expression against a pattern, asserting it matches, and letting you further assert on the bound variables. Example:

```
MyStruct {
    pub foo: u64,
    pub bar: bool
}

#[test]
fn test() {
    let m = MyStruct { foo: 5, bar: true };
    assert_let!(MyStruct { foo, bar: true } = m, {
        assert!(foo < 10);
    });
}
```

== segment_tree

Data Structures, TBF

== photorec

The tools for handling `report.xml` files:

=== photorec-size

Check the number and total size of jpg-s in input xmls.

=== photorec-read

Read reconstructed files from input disk, described by input xmls, into input directory. Create a subdir for each xml.

=== photorec-merge

Attempt to merge input xmls, overwriting a reconstructed file only by a superset of it. Write output xmls (more than one, in case of conflicts) to input directory.
